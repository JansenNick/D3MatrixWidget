// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package data.proxies;

public class Node
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Data.Node";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		_ID("_ID"),
		NodeLabel("NodeLabel"),
		Group("Group");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Node(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Data.Node"));
	}

	protected Node(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nodeMendixObject)
	{
		if (nodeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Data.Node", nodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Data.Node");

		this.nodeMendixObject = nodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Node.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static data.proxies.Node initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return data.proxies.Node.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static data.proxies.Node initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new data.proxies.Node(context, mendixObject);
	}

	public static data.proxies.Node load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return data.proxies.Node.initialize(context, mendixObject);
	}

	public static java.util.List<data.proxies.Node> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<data.proxies.Node> result = new java.util.ArrayList<data.proxies.Node>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Data.Node" + xpathConstraint))
			result.add(data.proxies.Node.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of _ID
	 */
	public final java.lang.String get_ID()
	{
		return get_ID(getContext());
	}

	/**
	 * @param context
	 * @return value of _ID
	 */
	public final java.lang.String get_ID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames._ID.toString());
	}

	/**
	 * Set value of _ID
	 * @param _id
	 */
	public final void set_ID(java.lang.String _id)
	{
		set_ID(getContext(), _id);
	}

	/**
	 * Set value of _ID
	 * @param context
	 * @param _id
	 */
	public final void set_ID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String _id)
	{
		getMendixObject().setValue(context, MemberNames._ID.toString(), _id);
	}

	/**
	 * @return value of NodeLabel
	 */
	public final java.lang.String getNodeLabel()
	{
		return getNodeLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of NodeLabel
	 */
	public final java.lang.String getNodeLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.NodeLabel.toString());
	}

	/**
	 * Set value of NodeLabel
	 * @param nodelabel
	 */
	public final void setNodeLabel(java.lang.String nodelabel)
	{
		setNodeLabel(getContext(), nodelabel);
	}

	/**
	 * Set value of NodeLabel
	 * @param context
	 * @param nodelabel
	 */
	public final void setNodeLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String nodelabel)
	{
		getMendixObject().setValue(context, MemberNames.NodeLabel.toString(), nodelabel);
	}

	/**
	 * @return value of Group
	 */
	public final java.lang.String getGroup()
	{
		return getGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of Group
	 */
	public final java.lang.String getGroup(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Group.toString());
	}

	/**
	 * Set value of Group
	 * @param group
	 */
	public final void setGroup(java.lang.String group)
	{
		setGroup(getContext(), group);
	}

	/**
	 * Set value of Group
	 * @param context
	 * @param group
	 */
	public final void setGroup(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String group)
	{
		getMendixObject().setValue(context, MemberNames.Group.toString(), group);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final data.proxies.Node that = (data.proxies.Node) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Data.Node";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
